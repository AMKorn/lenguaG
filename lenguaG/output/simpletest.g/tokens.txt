int : TYPE_INTEGER
a : IDENTIFIER
; : ENDLINE
int : TYPE_INTEGER
b : IDENTIFIER
; : ENDLINE
int : TYPE_INTEGER
c : IDENTIFIER
; : ENDLINE
int : TYPE_INTEGER
[ : L_BRACKET
] : R_BRACKET
d : IDENTIFIER
= : EQUAL
[ : L_BRACKET
1 : INTEGER
, : COMMA
2 : INTEGER
] : R_BRACKET
; : ENDLINE
char : TYPE_CHARACTER
[ : L_BRACKET
] : R_BRACKET
codeAsk : IDENTIFIER
= : EQUAL
"Introduce un n√∫mero:" : STRING
; : ENDLINE
main : RES_MAIN
{ : L_KEY
out : RES_OUT
( : L_PAREN
codeAsk : IDENTIFIER
) : R_PAREN
; : ENDLINE
in : RES_IN
( : L_PAREN
a : IDENTIFIER
) : R_PAREN
; : ENDLINE
out : RES_OUT
( : L_PAREN
codeAsk : IDENTIFIER
) : R_PAREN
; : ENDLINE
in : RES_IN
( : L_PAREN
b : IDENTIFIER
) : R_PAREN
; : ENDLINE
out : RES_OUT
( : L_PAREN
"El resultado es:" : STRING
) : R_PAREN
; : ENDLINE
c : IDENTIFIER
= : EQUAL
a : IDENTIFIER
+ : ADD
b : IDENTIFIER
; : ENDLINE
out : RES_OUT
( : L_PAREN
c : IDENTIFIER
) : R_PAREN
; : ENDLINE
} : R_KEY
